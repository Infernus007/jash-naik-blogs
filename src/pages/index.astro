---
import Layout from "../layouts/indexLayout.astro";
import { SITE_TITLE, SITE_DESCRIPTION, words, heroInnerLinks } from "../consts";
import { TypewriterEffectSmooth } from "../components/Typewriter/index";
import { Link, Button } from "@nextui-org/react";
import BlogCard from "../components/blog/Card";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import OptimizedImage from "../components/blog/OptimizedImage/index.astro";

interface Blog {
	id: string;
	data: {
		title: string;
		description: string;
		pubDate: Date;
		group: string;
		githubHref?: string;
		heroImage?: string;
		tags?: string[];
	};
	slug: string;
}

import { getImagePromise } from "../utils/utils";

const allBlogs: Blog[] = await getCollection("blog");

// Sort by pubDate descending and take the latest 6 posts
const latestBlogs: Blog[] = allBlogs
	.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
	.slice(0, 6);

// Group all blogs by their group
const groupedBlogs: { [key: string]: Blog[] } = allBlogs.reduce(
	(acc, blog) => {
		if (!acc[blog.data.group]) {
			acc[blog.data.group] = [];
		}
		acc[blog.data.group].push(blog);
		return acc;
	},
	{} as { [key: string]: Blog[] },
);

// Sort the groups alphabetically
const sortedGroups: string[] = Object.keys(groupedBlogs).sort();
---

<Layout description={SITE_DESCRIPTION} title={SITE_TITLE} image="/og-image.png" type="website">
  <!-- Enhanced Blog listing structured data -->
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Blog",
    "name": SITE_TITLE,
    "description": SITE_DESCRIPTION,
    "url": Astro.site?.toString(),
    "author": {
      "@type": "Person",
      "name": "Jash Naik",
      "url": "https://www.linkedin.com/in/jash-naik-7612b8162/",
      "jobTitle": "Full Stack Developer & AI Security Researcher",
      "description": "Expert in cybersecurity, artificial intelligence, and secure software development",
      "sameAs": [
        "https://github.com/jashnaik",
        "https://twitter.com/CodeAIShield",
        "https://www.linkedin.com/in/jash-naik-7612b8162/"
      ]
    },
    "inLanguage": "en-US",
    "keywords": "cybersecurity, artificial intelligence, AI, machine learning, ethical hacking, security, web development",
    "blogPost": latestBlogs.map(blog => ({
      "@type": "BlogPosting",
      "headline": blog.data.title,
      "description": blog.data.description,
      "datePublished": blog.data.pubDate.toISOString(),
      "url": new URL(`/blog/${blog.slug}`, Astro.site).toString(),
      "author": {
        "@type": "Person",
        "name": "Jash Naik"
      },
      "publisher": {
        "@type": "Organization",
        "name": SITE_TITLE,
        "logo": {
          "@type": "ImageObject",
          "url": new URL("/logo.svg", Astro.site).toString()
        }
      },
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": new URL(`/blog/${blog.slug}`, Astro.site).toString()
      },
      "image": blog.data.heroImage ? new URL(blog.data.heroImage.startsWith('/') ? blog.data.heroImage : `/assets/${blog.data.heroImage}`, Astro.site).toString() : new URL("/og-image.png", Astro.site).toString(),
      "keywords": blog.data.tags ? blog.data.tags.join(", ") : blog.data.group,
      "articleSection": blog.data.group
    }))
  })} is:inline />
  
  <div class="text-center sm:text-start" data-pagefind-ignore>
    <h1 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold leading-tight text-gray-900 dark:text-white">
      Hello, I'm Jash
    </h1>
    <h2 class="block lg:hidden text-xl sm:text-2xl   font-bold leading-tight text-gray-900 dark:text-white mt-2">
     Sharing research, blogs, and experiments at the crossroads of AI and Cybersecurity.
    </h2>
    <TypewriterEffectSmooth words={words} client:visible className="text-lg sm:text-xl md:text-xl lg:text-[2.7rem] pb-2 mt-4" />
  </div>
  <div class="flex flex-wrap gap-2 mt-5 justify-center sm:justify-start" data-pagefind-ignore>
    {
      heroInnerLinks.map((e) => {
        return (
          <Button
            href={e.href}
            as={Link}
            color="primary"
            showAnchorIcon
            variant="flat"
            size="sm"
            className="text-sm sm:text-base"
            aria-label={e.text}
          >
            {e.text}
          </Button>
        );
      })
    }
  </div>

  <section class="mt-10">
    <h3 class="text-lg sm:text-xl font-bold mb-4">Latest Blogs</h3>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 justify-items-center px-4 sm:px-6 lg:px-8">
      {latestBlogs.map((blog) => (
        <article class="w-full" data-pagefind-body>
         <BlogCard
  client:load
  title={blog.data.title}
  description={blog.data.description}
  href={`/blog/${blog.slug}`}
  githubHref={blog.data.githubHref}
>
  <div class="m-2 rounded-md h-[250px] relative w-full">
    {blog.data.heroImage ? (
      <OptimizedImage
        src={blog.data.heroImage}
        alt={blog.data.title}
        context="CARDS"
        class="rounded-2xl h-full w-full"
      />
    ) : (
     <div 
        class="h-full w-full rounded-2xl relative overflow-hidden group cursor-pointer"
        style={{
          background: `linear-gradient(135deg, 
            hsl(${Math.floor(Math.random() * 360)}, 75%, 55%) 0%, 
            hsl(${Math.floor(Math.random() * 360)}, 80%, 60%) 50%, 
            hsl(${Math.floor(Math.random() * 360)}, 70%, 45%) 100%)`,
          filter: 'saturate(1.3) contrast(1.2)'
        }}
      >
        {/* Mesh gradient overlay for depth */}
        <div 
          class="absolute inset-0 opacity-30"
          style={{
            background: `
              radial-gradient(circle at 20% 80%, hsla(${Math.floor(Math.random() * 360)}, 100%, 80%, 0.4) 0%, transparent 50%),
              radial-gradient(circle at 80% 20%, hsla(${Math.floor(Math.random() * 360)}, 100%, 75%, 0.3) 0%, transparent 50%),
              radial-gradient(circle at 40% 40%, hsla(${Math.floor(Math.random() * 360)}, 100%, 70%, 0.2) 0%, transparent 50%)`
          }}
        ></div>
        
        {/* Floating geometric elements */}
        <div class="absolute top-6 right-8 w-12 h-12 border-2 border-white/30 rounded-lg rotate-12 group-hover:rotate-45 transition-transform duration-700"></div>
        <div class="absolute bottom-8 left-8 w-16 h-2 bg-white/20 rounded-full transform -rotate-12 group-hover:rotate-12 transition-transform duration-500"></div>
        <div class="absolute top-1/3 left-1/4 w-6 h-6 bg-white/25 rotate-45 rounded-sm group-hover:scale-125 transition-transform duration-300"></div>
        <div class="absolute bottom-1/3 right-1/3 w-8 h-8 border border-white/40 rounded-full group-hover:border-white/60 transition-colors duration-300"></div>
        
        {/* Dynamic noise texture */}
        <div class="absolute inset-0 opacity-10 mix-blend-overlay" style={{ backgroundImage: `url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E")` }}></div>
        
        {/* Strong contrast overlay for text readability */}
        <div class="absolute inset-0 bg-gradient-to-br from-black/40 via-black/20 to-black/50"></div>
        
        {/* Content container */}
        <div class="relative h-full w-full flex flex-col items-center justify-center p-6 z-10">
          {/* Title initials with enhanced contrast */}
          <div 
            class="text-5xl font-black mb-3 group-hover:scale-110 transition-all duration-300 select-none"
            style={{ 
              color: 'white',
              textShadow: '0 2px 8px rgba(0,0,0,0.8), 0 0 0 2px rgba(0,0,0,0.3)',
              WebkitTextStroke: '1px rgba(0,0,0,0.3)'
            }}
          >
            {blog.data.title.split(' ').map(word => word[0]).join('').slice(0, 3)}
          </div>
          
          {/* Modern decorative elements */}
          <div class="flex items-center gap-2 mb-4">
            <div class="w-8 h-0.5 bg-white/80 rounded-full group-hover:w-12 transition-all duration-300"></div>
            <div class="w-2 h-2 bg-white/60 rounded-full"></div>
            <div class="w-8 h-0.5 bg-white/80 rounded-full group-hover:w-12 transition-all duration-300"></div>
          </div>
          
          {/* Subtle accent text */}
          <div class="text-white/70 text-xs font-medium uppercase tracking-wider">
            Blog Post
          </div>
        </div>
        
        {/* Subtle glow effect on hover */}
        <div class="absolute inset-0 rounded-2xl bg-white/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      </div>
    )}
  </div>
</BlogCard>
        </article>
      ))}
    </div>
  </section>

  <!-- All Topics section -->
  <section class="mt-12 sm:mt-16">
    <h3 class="text-xl sm:text-2xl font-bold mb-6 sm:mb-8">Explore All Topics</h3>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8">
      {sortedGroups.map((group) => (
        <div class="group" data-pagefind-body>
          <h4 class="text-lg sm:text-xl w-fit font-semibold mb-3 sm:mb-4 pb-2 border-b-2 border-gray-200 dark:border-gray-700 group-hover:border-blue-500 transition-colors duration-300" data-pagefind-meta="group:{group}">
            {group}
          </h4>
          <ul class="space-y-2">
            {groupedBlogs[group].map((blog) => (
              <li class="group/item">
                <a href={`/blog/${blog.slug}`} class="text-sm sm:text-base text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-200 flex items-center" data-pagefind-index-text={blog.data.title}>
                  <span class="mr-2 opacity-0 group-hover/item:opacity-100 transition-opacity duration-200">&#8594;</span>
                  {blog.data.title}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </section>
</Layout>

<style>
  .group:hover h4 {
    @apply text-blue-500;
  }

  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .animate-gradient {
    background-size: 200% 200%;
    animation: gradient 15s ease infinite;
  }
</style>
