---
/**
 * @desc This is the base head component that is used on all pages.
 */

// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../styles/global.css";
import '@fontsource-variable/gabarito';
import { SEO } from "astro-seo";
import { SITE_TITLE, SITE_DESCRIPTION, TWITTER_CREATOR } from "../consts";
import { ViewTransitions } from "astro:transitions";

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
	title = SITE_TITLE,
	description = SITE_DESCRIPTION,
	image = "/og-image.png",
} = Astro.props;

// Enhanced image resolution for hero images and assets
const resolveImageUrl = (imageUrl: string) => {
	if (!imageUrl) return new URL("/og-image.png", Astro.site).toString();
	
	// If it's already a full URL, return as is
	if (imageUrl.startsWith('http')) return imageUrl;
	
	// If it starts with /, treat as public asset
	if (imageUrl.startsWith('/')) {
		return new URL(imageUrl, Astro.site).toString();
	}
	
	// Otherwise, treat as asset from src/assets
	return new URL(`/src/assets/${imageUrl}`, Astro.site).toString();
};

const resolvedImageWithDomain = resolveImageUrl(image);

const resolvedFaviconWithDomain = new URL(
	"/favicon.svg",
	Astro.site,
).toString();
---

<!-- Global Metadata -->
<meta charset="utf-8" />

<!-- Primary Meta Tags -->
<title>{title}</title>

<!-- Fonts -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Gabarito:wght@400;500;600;700&family=Gabarito+Mono:wght@400;500;600;700&display=swap" rel="stylesheet">

<SEO
	title={title}
	description={description}
	canonical={canonicalURL}
	openGraph={{
		basic: {
			url: canonicalURL,
			title: title,
			type: "website",
			image: resolvedImageWithDomain,
		},
		optional: {
			description: description,
			siteName: title,
		},
		image: {
			alt: title,
		},
	}}
	twitter={{
		card: "summary_large_image",
		site: canonicalURL.toString(),
		title: title,
		description: description,
		image: resolvedImageWithDomain,
		imageAlt: title,
		creator: TWITTER_CREATOR,
	}}
	extend={{
		link: [
			{
				rel: "icon",
				type: "image/svg+xml",
				href: resolvedFaviconWithDomain,
			},
		],
		meta: [
			{
				name: "viewport",
				content: "width=device-width,initial-scale=1",
			},
			{
				name: "generator",
				content: Astro.generator,
			},
			{
				name: "viewport",
				content: "width=device-width,initial-scale=1",
			},
			{
				name: "twitter:image",
				content: resolvedImageWithDomain,
			},
			{ name: "twitter:title", content: title },
			{ name: "twitter:description", content: description },
		],
	}}
/>

<ViewTransitions/>
