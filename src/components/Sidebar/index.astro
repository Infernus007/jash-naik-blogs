---
import { getCollection } from "astro:content";

const allBlogs = await getCollection("blog");

// Sort by pubDate descending and take the latest 6 posts
const latestBlogs = allBlogs
	.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
	.slice(0, 6);

// Group the latest posts by their group
const groupedBlogs = latestBlogs.reduce(
	(acc, blog) => {
		if (!acc[blog.data.group]) {
			acc[blog.data.group] = [];
		}
		acc[blog.data.group].push(blog);
		return acc;
	},
	{} as Record<string, typeof latestBlogs>,
);

const sortedGroups = Object.keys(groupedBlogs).sort();
const currentPath = Astro.url.pathname;
---

<aside class="w-64 p-4 flex flex-col items-center">
  {sortedGroups.map((group, index) => (
    <div class="mb-4 w-full">
      <button
        id={`toggle-btn-${index}`}
        class="w-full flex items-center justify-between text-base font-semibold mb-2 focus:outline-none py-1"
      >
        <span>{group}</span>
        <svg
          class="w-3 h-3 ml-1 transition-transform duration-300"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path
            fill-rule="evenodd"
            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
            clip-rule="evenodd"
          />
        </svg>
      </button>
      <ul
        id={`collapsible-${index}`}
        class="overflow-hidden transition-all duration-300 ease-in-out ml-4"
      >
        {groupedBlogs[group].map((blog) => {
          const isActive = currentPath === `/blog/${blog.slug}`;
          return (
            <li class="mb-1">
              <a
                title={blog.data.title}
                href={`/blog/${blog.slug}`}
                class={`block w-full rounded-md py-1 px-2 text-sm transition-colors duration-200 ${
                  isActive
                    ? "bg-sky-400 dark:bg-fuchsia-400"
                    : "text-foreground/85 hover:bg-gray-300 dark:hover:bg-gray-700"
                }`}
              >
                {blog.data.title}
              </a>
            </li>
          );
        })}
      </ul>
    </div>
  ))}
</aside>

<script>
  document.addEventListener('astro:page-load', () => {
    document.querySelectorAll('[id^="toggle-btn-"]').forEach((toggleBtn) => {
      const index = toggleBtn.id.split('-')[2];
      const collapsible = document.getElementById(`collapsible-${index}`) as HTMLElement | null;
      let isCollapsed = true; // Start collapsed

      if (collapsible && collapsible.scrollHeight > 0) {
        collapsible.style.maxHeight = '0';
      }

      toggleBtn.addEventListener('click', () => {
        isCollapsed = !isCollapsed;
        const icon = toggleBtn.querySelector('svg') as SVGElement | null;
        
        if (collapsible && icon) {
          if (isCollapsed) {
            collapsible.style.maxHeight = '0';
            icon.style.transform = 'rotate(0deg)';
          } else {
            collapsible.style.maxHeight = collapsible.scrollHeight + 'px';
            icon.style.transform = 'rotate(180deg)';
          }
        }
      });
    });
  });
</script>
